name: Release

on:
  push:
#    branches: [main]
    tags: ['*']

env:
  FRONTEND_NAME: 'task-manager'
  BACKEND_URL: ${{ secrets.BACKEND_URL }}

jobs:
  Backend:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 18
      - name: Build
        run: cd backend && ./gradlew buildFatJar
      - name: Deploy
        uses: hmanzur/actions-aws-eb@v1.0.0
        with:
          command: 'deploy --staged $AWS_ENVIRONMENT_NAME'
        env:
          AWS_ENVIRONMENT_NAME: ${{ secrets.AWS_ENVIRONMENT_NAME }}
      - name: Set environment variables
        uses: hmanzur/actions-aws-eb@v1.0.0
        with:
          command: 'setenv DATABASE_URL=$DATABASE_URL BACKEND_URL=$BACKEND_URL JWT_SECRET=$JWT_SECRET BCRYPT_STRENGTH=$BCRYPT_STRENGTH'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          BCRYPT_STRENGTH: ${{ secrets.BCRYPT_STRENGTH }}

  Web:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Build frontend web version
        run: |
          chmod +x ./scripts/build_web.sh
          ./scripts/build_web.sh $REPOSITORY_NAME
        env:
          REPOSITORY_NAME: ${{ github.event.repository.name }}
      - name: Deploy frontend web version
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build

  Android:
    runs-on: ubuntu-latest

    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
      RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 18
      - name: Checkout keystore repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.KEYSTORE_GIT_REPOSITORY }}
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: frontend/android/app/keystore
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Build android version
        run: |
          chmod +x ./scripts/build_android.sh
          ./scripts/build_android.sh $FRONTEND_NAME-$GIT_TAG_NAME
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android
          path: build/*
          retention-days: 1

  Linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: |
          chmod +x ./scripts/build_linux.sh
          ./scripts/build_linux.sh

  Release:
    runs-on: ubuntu-latest
    needs: [ Backend, Web, Android, Linux ]

    steps:
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.GIT_TAG_NAME }}
          prerelease: false
          files: '**/*'